type UserInfo @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  address: String
  picture: String
  phone_number: String
  cognitoID: String
  lessonoffers: [LessonOffer] @manyToMany(relationName: "LessonOfferUserInfo")
}

type Homework @model @auth(rules: [{allow: private, operations: [create, read]}, {allow: owner}]) {
  id: ID!
  date: AWSDateTime
  description: String
  lessonofferID: ID! @index(name: "byLessonOffer")
}

type LessonOffer @model @auth(rules: [{allow: owner}, {allow: private, operations: [create, read]}]) {
  id: ID!
  Subject: Subject @hasOne
  location: String
  locationRadius: Int
  place: [String]
  days: [String]
  hours: [String]
  Homework: [Homework] @hasMany(indexName: "byLessonOffer", fields: ["id"])
  UserInfos: [UserInfo] @manyToMany(relationName: "LessonOfferUserInfo")
  ownerCognitoID: String
}

type School @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: private, operations: [read]}, {allow: owner}]) {
  id: ID!
  name: String
}

type Subject @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: private, operations: [read]}, {allow: owner}]) {
  id: ID!
  name: String
  School: School @hasOne
}
 